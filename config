#!/bin/bash

CFLAGS="-g"

isnum() { [ "$(echo $*|grep -v "[^0-9]")" ]; }

enter_int() {
	read var
	if [ ! $var ]; then
		var=$2
	fi
	if ( ! isnum $var ) || [ $var -eq 0 ]; then
		echo "Incorrect value."
		exit 1
	fi
	echo "#define $1 $var" >> include/config.h
}

enter_string() {
	read var
	if [ ! $var ]; then
		var=$2
	fi
	var=`tr '[:lower:]' '[:upper:]' <<<"$var"`
	for val in $*; do
		if [[ $val != $1 ]]; then
			val=`tr '[:lower:]' '[:upper:]' <<<"$val"`
			if [[ $var = "$val" ]]; then
				echo "#define $val 1" >> include/config.h
				echo "#define $1 $val" >> include/config.h
				echo $val
				return
			#else
			#	echo "#define $val 0" >> include/config.h
			fi
		fi
	done
	echo "Incorrect value."
}

enter_bool() {
	read -n 1 var
	echo -e "\n"
	if [ ! $var ]; then
		var=$2
	fi
	var=`tr '[:lower:]' '[:upper:]' <<<"$var"`
	if [[ $var = "Y" ]] || [[ $var = "YES" ]]; then
		echo "#define $1" >> include/config.h
		return 1
	elif [[ $var = "N" ]] || [[ $var = "NO" ]]; then
		return 0
	fi
	echo "Incorrect value."
}

rm -f include/config.h
echo "Hard disk sector size (in bytes) [512]: "
enter_int SECTOR_SIZE 512
echo "Do you want to use graphic mode? [Y/n]"
echo "WARNING: console backend currently NOT work as planned."
enter_bool GUI y
if [ $? -eq 1 ]; then
	echo "If you want to use graphic mode, you should select a graphical library."
	echo "We provide two X11 backends: XCB and Xlib. It is recommended to use XCB always,"
	echo "when it possible. Xlib variant added for compatibility."
	echo "For using on Windows, you should select WinAPI backend."
	echo "WARNING: Xlib backend currently NOT implemented."
	echo "[XCB/xlib/winapi]"
	gui_lib=$(enter_string GUI_LIB XCB Xlib WinAPI)
	if [ $gui_lib = "XCB" ]; then
		CFLAGS="$CFLAGS -lxcb"
	fi
fi
sed -e "s/^CFLAGS=.*/CFLAGS=$CFLAGS/" -i src/Makefile
echo "Enter path to your C compiler [cc]:"
read CC
if [ ! $CC ]; then
	CC="cc"
fi
sed -e "s/^CC=.*/CC=$CC/" -i src/Makefile
